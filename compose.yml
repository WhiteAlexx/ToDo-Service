services:
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=your_db_settings
      - POSTGRES_USER=your_db_settings
      - POSTGRES_PASSWORD=your_db_settings
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    depends_on:
      - redis

  web:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - '127.0.0.1:8000:8000'
    restart: unless-stopped #no, always, on-failure: 5, unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis

  bot:
    build: ./bot
    command: python -m app.py
    environment:
      - REDIS_URL=redis://redis:6379/1
    env_file:
      - ./bot/.env
    restart: unless-stopped
    depends_on:
      - web
      - redis

  celery_worker:
    build: ./backend
    command: celery -A app worker -l info
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./backend/.env
    restart: unless-stopped
    depends_on:
      - redis
      - db

  celery_beat:
    build: ./backend
    command: celery -A app beat -l info
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./backend/.env
    restart: unless-stopped
    depends_on:
      - redis
      - db

volumes:
  redis_data:
  postgres_data: